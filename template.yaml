AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Resources:
  WebhookHandlerFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: dist/webhookHandler.handler
      Runtime: nodejs20.x
      CodeUri: .
      Environment:
        Variables:
          TELEGRAM_BOT_NAME: !Ref TelegramBotName
          USERS_TABLE: !Ref UsersTable
          RECORDS_TABLE: !Ref RecordsTable
          MESSAGE_QUEUE_NAME: !Sub "${AWS::StackName}-MessageQueue"
      Events:
        Api:
          Type: Api
          Properties:
            Path: /webhook
            Method: post
      Policies:
        - Statement:
            Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
            Resource: !GetAtt UsersTable.Arn
        - Statement:
            Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:UpdateItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
            Resource: !GetAtt RecordsTable.Arn
        - Statement:
            Effect: Allow
            Action:
              - sqs:SendMessage
            Resource: !GetAtt MessageQueue.Arn

  MethodHandlerFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: dist/methodHandler.handler
      Runtime: nodejs20.x
      CodeUri: .
      Environment:
        Variables:
          TELEGRAM_BOT_TOKEN: !Ref TelegramBotToken
      Events:
        SQSTrigger:
          Type: SQS
          Properties:
            Queue: !GetAtt MessageQueue.Arn

  UsersTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 'Users'
      AttributeDefinitions:
        - AttributeName: 'id'
          AttributeType: 'N'
      KeySchema:
        - AttributeName: 'id'
          KeyType: 'HASH'
      BillingMode: PAY_PER_REQUEST

  RecordsTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 'Records'
      AttributeDefinitions:
        - AttributeName: 'RecordId'
          AttributeType: 'S'
        - AttributeName: 'UserId'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'RecordId'
          KeyType: 'HASH'
        - AttributeName: 'UserId'
          KeyType: 'RANGE'
      BillingMode: PAY_PER_REQUEST

  MessageQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: !Sub "${AWS::StackName}-MessageQueue"

Parameters:
  TelegramBotName:
    Type: String
    Description: The Telegram Bot Name
  TelegramBotToken:
    Type: String
    Description: The Telegram Bot Token